!function(e){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=e();else if("function"==typeof define&&define.amd)define([],e);else{("undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:this).turf=e()}}((function(){return function e(r,t,n){function o(u,a){if(!t[u]){if(!r[u]){var s="function"==typeof require&&require;if(!a&&s)return s(u,!0);if(i)return i(u,!0);var l=new Error("Cannot find module '"+u+"'");throw l.code="MODULE_NOT_FOUND",l}var f=t[u]={exports:{}};r[u][0].call(f.exports,(function(e){return o(r[u][1][e]||e)}),f,f.exports,e,r,t,n)}return t[u].exports}for(var i="function"==typeof require&&require,u=0;u<n.length;u++)o(n[u]);return o}({1:[function(e,r,t){r.exports={helpers:e("@turf/helpers"),booleanPointInPolygon:e("@turf/boolean-point-in-polygon").default,meta:e("@turf/meta")}},{"@turf/boolean-point-in-polygon":2,"@turf/helpers":3,"@turf/meta":5}],2:[function(e,r,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=e("@turf/invariant");function o(e,r,t){var n=!1;r[0][0]===r[r.length-1][0]&&r[0][1]===r[r.length-1][1]&&(r=r.slice(0,r.length-1));for(var o=0,i=r.length-1;o<r.length;i=o++){var u=r[o][0],a=r[o][1],s=r[i][0],l=r[i][1];if(e[1]*(u-s)+a*(s-e[0])+l*(e[0]-u)==0&&(u-e[0])*(s-e[0])<=0&&(a-e[1])*(l-e[1])<=0)return!t;a>e[1]!=l>e[1]&&e[0]<(s-u)*(e[1]-a)/(l-a)+u&&(n=!n)}return n}t.default=function(e,r,t){if(void 0===t&&(t={}),!e)throw new Error("point is required");if(!r)throw new Error("polygon is required");var i=n.getCoord(e),u=n.getGeom(r),a=u.type,s=r.bbox,l=u.coordinates;if(s&&!1===function(e,r){return r[0]<=e[0]&&r[1]<=e[1]&&r[2]>=e[0]&&r[3]>=e[1]}(i,s))return!1;"Polygon"===a&&(l=[l]);for(var f=!1,c=0;c<l.length&&!f;c++)if(o(i,l[c][0],t.ignoreBoundary)){for(var g=!1,d=1;d<l[c].length&&!g;)o(i,l[c][d],!t.ignoreBoundary)&&(g=!0),d++;g||(f=!0)}return f}},{"@turf/invariant":4}],3:[function(e,r,t){"use strict";function n(e,r,t){void 0===t&&(t={});var n={type:"Feature"};return(0===t.id||t.id)&&(n.id=t.id),t.bbox&&(n.bbox=t.bbox),n.properties=r||{},n.geometry=e,n}function o(e,r,t){if(void 0===t&&(t={}),!e)throw new Error("coordinates is required");if(!Array.isArray(e))throw new Error("coordinates must be an Array");if(e.length<2)throw new Error("coordinates must be at least 2 numbers long");if(!y(e[0])||!y(e[1]))throw new Error("coordinates must contain numbers");return n({type:"Point",coordinates:e},r,t)}function i(e,r,t){void 0===t&&(t={});for(var o=0,i=e;o<i.length;o++){var u=i[o];if(u.length<4)throw new Error("Each LinearRing of a Polygon must have 4 or more Positions.");for(var a=0;a<u[u.length-1].length;a++)if(u[u.length-1][a]!==u[0][a])throw new Error("First and last Position are not equivalent.")}return n({type:"Polygon",coordinates:e},r,t)}function u(e,r,t){if(void 0===t&&(t={}),e.length<2)throw new Error("coordinates must be an array of two or more positions");return n({type:"LineString",coordinates:e},r,t)}function a(e,r){void 0===r&&(r={});var t={type:"FeatureCollection"};return r.id&&(t.id=r.id),r.bbox&&(t.bbox=r.bbox),t.features=e,t}function s(e,r,t){return void 0===t&&(t={}),n({type:"MultiLineString",coordinates:e},r,t)}function l(e,r,t){return void 0===t&&(t={}),n({type:"MultiPoint",coordinates:e},r,t)}function f(e,r,t){return void 0===t&&(t={}),n({type:"MultiPolygon",coordinates:e},r,t)}function c(e,r){void 0===r&&(r="kilometers");var n=t.factors[r];if(!n)throw new Error(r+" units is invalid");return e*n}function g(e,r){void 0===r&&(r="kilometers");var n=t.factors[r];if(!n)throw new Error(r+" units is invalid");return e/n}function d(e){return 180*(e%(2*Math.PI))/Math.PI}function y(e){return!isNaN(e)&&null!==e&&!Array.isArray(e)}Object.defineProperty(t,"__esModule",{value:!0}),t.earthRadius=6371008.8,t.factors={centimeters:100*t.earthRadius,centimetres:100*t.earthRadius,degrees:t.earthRadius/111325,feet:3.28084*t.earthRadius,inches:39.37*t.earthRadius,kilometers:t.earthRadius/1e3,kilometres:t.earthRadius/1e3,meters:t.earthRadius,metres:t.earthRadius,miles:t.earthRadius/1609.344,millimeters:1e3*t.earthRadius,millimetres:1e3*t.earthRadius,nauticalmiles:t.earthRadius/1852,radians:1,yards:1.0936*t.earthRadius},t.unitsFactors={centimeters:100,centimetres:100,degrees:1/111325,feet:3.28084,inches:39.37,kilometers:.001,kilometres:.001,meters:1,metres:1,miles:1/1609.344,millimeters:1e3,millimetres:1e3,nauticalmiles:1/1852,radians:1/t.earthRadius,yards:1.0936133},t.areaFactors={acres:247105e-9,centimeters:1e4,centimetres:1e4,feet:10.763910417,hectares:1e-4,inches:1550.003100006,kilometers:1e-6,kilometres:1e-6,meters:1,metres:1,miles:386e-9,millimeters:1e6,millimetres:1e6,yards:1.195990046},t.feature=n,t.geometry=function(e,r,t){switch(void 0===t&&(t={}),e){case"Point":return o(r).geometry;case"LineString":return u(r).geometry;case"Polygon":return i(r).geometry;case"MultiPoint":return l(r).geometry;case"MultiLineString":return s(r).geometry;case"MultiPolygon":return f(r).geometry;default:throw new Error(e+" is invalid")}},t.point=o,t.points=function(e,r,t){return void 0===t&&(t={}),a(e.map((function(e){return o(e,r)})),t)},t.polygon=i,t.polygons=function(e,r,t){return void 0===t&&(t={}),a(e.map((function(e){return i(e,r)})),t)},t.lineString=u,t.lineStrings=function(e,r,t){return void 0===t&&(t={}),a(e.map((function(e){return u(e,r)})),t)},t.featureCollection=a,t.multiLineString=s,t.multiPoint=l,t.multiPolygon=f,t.geometryCollection=function(e,r,t){return void 0===t&&(t={}),n({type:"GeometryCollection",geometries:e},r,t)},t.round=function(e,r){if(void 0===r&&(r=0),r&&!(r>=0))throw new Error("precision must be a positive number");var t=Math.pow(10,r||0);return Math.round(e*t)/t},t.radiansToLength=c,t.lengthToRadians=g,t.lengthToDegrees=function(e,r){return d(g(e,r))},t.bearingToAzimuth=function(e){var r=e%360;return r<0&&(r+=360),r},t.radiansToDegrees=d,t.degreesToRadians=function(e){return e%360*Math.PI/180},t.convertLength=function(e,r,t){if(void 0===r&&(r="kilometers"),void 0===t&&(t="kilometers"),!(e>=0))throw new Error("length must be a positive number");return c(g(e,r),t)},t.convertArea=function(e,r,n){if(void 0===r&&(r="meters"),void 0===n&&(n="kilometers"),!(e>=0))throw new Error("area must be a positive number");var o=t.areaFactors[r];if(!o)throw new Error("invalid original units");var i=t.areaFactors[n];if(!i)throw new Error("invalid final units");return e/o*i},t.isNumber=y,t.isObject=function(e){return!!e&&e.constructor===Object},t.validateBBox=function(e){if(!e)throw new Error("bbox is required");if(!Array.isArray(e))throw new Error("bbox must be an Array");if(4!==e.length&&6!==e.length)throw new Error("bbox must be an Array of 4 or 6 numbers");e.forEach((function(e){if(!y(e))throw new Error("bbox must only contain numbers")}))},t.validateId=function(e){if(!e)throw new Error("id is required");if(-1===["string","number"].indexOf(typeof e))throw new Error("id must be a number or a string")}},{}],4:[function(e,r,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=e("@turf/helpers");t.getCoord=function(e){if(!e)throw new Error("coord is required");if(!Array.isArray(e)){if("Feature"===e.type&&null!==e.geometry&&"Point"===e.geometry.type)return e.geometry.coordinates;if("Point"===e.type)return e.coordinates}if(Array.isArray(e)&&e.length>=2&&!Array.isArray(e[0])&&!Array.isArray(e[1]))return e;throw new Error("coord must be GeoJSON Point or an Array of numbers")},t.getCoords=function(e){if(Array.isArray(e))return e;if("Feature"===e.type){if(null!==e.geometry)return e.geometry.coordinates}else if(e.coordinates)return e.coordinates;throw new Error("coords must be GeoJSON Feature, Geometry Object or an Array")},t.containsNumber=function e(r){if(r.length>1&&n.isNumber(r[0])&&n.isNumber(r[1]))return!0;if(Array.isArray(r[0])&&r[0].length)return e(r[0]);throw new Error("coordinates must only contain numbers")},t.geojsonType=function(e,r,t){if(!r||!t)throw new Error("type and name required");if(!e||e.type!==r)throw new Error("Invalid input to "+t+": must be a "+r+", given "+e.type)},t.featureOf=function(e,r,t){if(!e)throw new Error("No feature passed");if(!t)throw new Error(".featureOf() requires a name");if(!e||"Feature"!==e.type||!e.geometry)throw new Error("Invalid input to "+t+", Feature with geometry required");if(!e.geometry||e.geometry.type!==r)throw new Error("Invalid input to "+t+": must be a "+r+", given "+e.geometry.type)},t.collectionOf=function(e,r,t){if(!e)throw new Error("No featureCollection passed");if(!t)throw new Error(".collectionOf() requires a name");if(!e||"FeatureCollection"!==e.type)throw new Error("Invalid input to "+t+", FeatureCollection required");for(var n=0,o=e.features;n<o.length;n++){var i=o[n];if(!i||"Feature"!==i.type||!i.geometry)throw new Error("Invalid input to "+t+", Feature with geometry required");if(!i.geometry||i.geometry.type!==r)throw new Error("Invalid input to "+t+": must be a "+r+", given "+i.geometry.type)}},t.getGeom=function(e){return"Feature"===e.type?e.geometry:e},t.getType=function(e,r){return"FeatureCollection"===e.type?"FeatureCollection":"GeometryCollection"===e.type?"GeometryCollection":"Feature"===e.type&&null!==e.geometry?e.geometry.type:e.type}},{"@turf/helpers":3}],5:[function(e,r,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=e("@turf/helpers");function o(e,r,t){if(null!==e)for(var n,i,u,a,s,l,f,c,g=0,d=0,y=e.type,h="FeatureCollection"===y,m="Feature"===y,p=h?e.features.length:1,v=0;v<p;v++){s=(c=!!(f=h?e.features[v].geometry:m?e.geometry:e)&&"GeometryCollection"===f.type)?f.geometries.length:1;for(var w=0;w<s;w++){var b=0,P=0;if(null!==(a=c?f.geometries[w]:f)){l=a.coordinates;var E=a.type;switch(g=!t||"Polygon"!==E&&"MultiPolygon"!==E?0:1,E){case null:break;case"Point":if(!1===r(l,d,v,b,P))return!1;d++,b++;break;case"LineString":case"MultiPoint":for(n=0;n<l.length;n++){if(!1===r(l[n],d,v,b,P))return!1;d++,"MultiPoint"===E&&b++}"LineString"===E&&b++;break;case"Polygon":case"MultiLineString":for(n=0;n<l.length;n++){for(i=0;i<l[n].length-g;i++){if(!1===r(l[n][i],d,v,b,P))return!1;d++}"MultiLineString"===E&&b++,"Polygon"===E&&P++}"Polygon"===E&&b++;break;case"MultiPolygon":for(n=0;n<l.length;n++){for(P=0,i=0;i<l[n].length;i++){for(u=0;u<l[n][i].length-g;u++){if(!1===r(l[n][i][u],d,v,b,P))return!1;d++}P++}b++}break;case"GeometryCollection":for(n=0;n<a.geometries.length;n++)if(!1===o(a.geometries[n],r,t))return!1;break;default:throw new Error("Unknown Geometry Type")}}}}}function i(e,r){var t;switch(e.type){case"FeatureCollection":for(t=0;t<e.features.length&&!1!==r(e.features[t].properties,t);t++);break;case"Feature":r(e.properties,0)}}function u(e,r){if("Feature"===e.type)r(e,0);else if("FeatureCollection"===e.type)for(var t=0;t<e.features.length&&!1!==r(e.features[t],t);t++);}function a(e,r){var t,n,o,i,u,a,s,l,f,c,g=0,d="FeatureCollection"===e.type,y="Feature"===e.type,h=d?e.features.length:1;for(t=0;t<h;t++){for(a=d?e.features[t].geometry:y?e.geometry:e,l=d?e.features[t].properties:y?e.properties:{},f=d?e.features[t].bbox:y?e.bbox:void 0,c=d?e.features[t].id:y?e.id:void 0,u=(s=!!a&&"GeometryCollection"===a.type)?a.geometries.length:1,o=0;o<u;o++)if(null!==(i=s?a.geometries[o]:a))switch(i.type){case"Point":case"LineString":case"MultiPoint":case"Polygon":case"MultiLineString":case"MultiPolygon":if(!1===r(i,g,l,f,c))return!1;break;case"GeometryCollection":for(n=0;n<i.geometries.length;n++)if(!1===r(i.geometries[n],g,l,f,c))return!1;break;default:throw new Error("Unknown Geometry Type")}else if(!1===r(null,g,l,f,c))return!1;g++}}function s(e,r){a(e,(function(e,t,o,i,u){var a,s=null===e?null:e.type;switch(s){case null:case"Point":case"LineString":case"Polygon":return!1!==r(n.feature(e,o,{bbox:i,id:u}),t,0)&&void 0}switch(s){case"MultiPoint":a="Point";break;case"MultiLineString":a="LineString";break;case"MultiPolygon":a="Polygon"}for(var l=0;l<e.coordinates.length;l++){var f={type:a,coordinates:e.coordinates[l]};if(!1===r(n.feature(f,o),t,l))return!1}}))}function l(e,r){s(e,(function(e,t,i){var u=0;if(e.geometry){var a=e.geometry.type;if("Point"!==a&&"MultiPoint"!==a){var s,l=0,f=0,c=0;return!1!==o(e,(function(o,a,g,d,y){if(void 0===s||t>l||d>f||y>c)return s=o,l=t,f=d,c=y,void(u=0);var h=n.lineString([s,o],e.properties);if(!1===r(h,t,i,y,u))return!1;u++,s=o}))&&void 0}}}))}function f(e,r){if(!e)throw new Error("geojson is required");s(e,(function(e,t,o){if(null!==e.geometry){var i=e.geometry.type,u=e.geometry.coordinates;switch(i){case"LineString":if(!1===r(e,t,o,0,0))return!1;break;case"Polygon":for(var a=0;a<u.length;a++)if(!1===r(n.lineString(u[a],e.properties),t,o,a))return!1}}}))}t.coordAll=function(e){var r=[];return o(e,(function(e){r.push(e)})),r},t.coordEach=o,t.coordReduce=function(e,r,t,n){var i=t;return o(e,(function(e,n,o,u,a){i=0===n&&void 0===t?e:r(i,e,n,o,u,a)}),n),i},t.featureEach=u,t.featureReduce=function(e,r,t){var n=t;return u(e,(function(e,o){n=0===o&&void 0===t?e:r(n,e,o)})),n},t.findPoint=function(e,r){if(r=r||{},!n.isObject(r))throw new Error("options is invalid");var t,o=r.featureIndex||0,i=r.multiFeatureIndex||0,u=r.geometryIndex||0,a=r.coordIndex||0,s=r.properties;switch(e.type){case"FeatureCollection":o<0&&(o=e.features.length+o),s=s||e.features[o].properties,t=e.features[o].geometry;break;case"Feature":s=s||e.properties,t=e.geometry;break;case"Point":case"MultiPoint":return null;case"LineString":case"Polygon":case"MultiLineString":case"MultiPolygon":t=e;break;default:throw new Error("geojson is invalid")}if(null===t)return null;var l=t.coordinates;switch(t.type){case"Point":return n.point(l,s,r);case"MultiPoint":return i<0&&(i=l.length+i),n.point(l[i],s,r);case"LineString":return a<0&&(a=l.length+a),n.point(l[a],s,r);case"Polygon":return u<0&&(u=l.length+u),a<0&&(a=l[u].length+a),n.point(l[u][a],s,r);case"MultiLineString":return i<0&&(i=l.length+i),a<0&&(a=l[i].length+a),n.point(l[i][a],s,r);case"MultiPolygon":return i<0&&(i=l.length+i),u<0&&(u=l[i].length+u),a<0&&(a=l[i][u].length-a),n.point(l[i][u][a],s,r)}throw new Error("geojson is invalid")},t.findSegment=function(e,r){if(r=r||{},!n.isObject(r))throw new Error("options is invalid");var t,o=r.featureIndex||0,i=r.multiFeatureIndex||0,u=r.geometryIndex||0,a=r.segmentIndex||0,s=r.properties;switch(e.type){case"FeatureCollection":o<0&&(o=e.features.length+o),s=s||e.features[o].properties,t=e.features[o].geometry;break;case"Feature":s=s||e.properties,t=e.geometry;break;case"Point":case"MultiPoint":return null;case"LineString":case"Polygon":case"MultiLineString":case"MultiPolygon":t=e;break;default:throw new Error("geojson is invalid")}if(null===t)return null;var l=t.coordinates;switch(t.type){case"Point":case"MultiPoint":return null;case"LineString":return a<0&&(a=l.length+a-1),n.lineString([l[a],l[a+1]],s,r);case"Polygon":return u<0&&(u=l.length+u),a<0&&(a=l[u].length+a-1),n.lineString([l[u][a],l[u][a+1]],s,r);case"MultiLineString":return i<0&&(i=l.length+i),a<0&&(a=l[i].length+a-1),n.lineString([l[i][a],l[i][a+1]],s,r);case"MultiPolygon":return i<0&&(i=l.length+i),u<0&&(u=l[i].length+u),a<0&&(a=l[i][u].length-a-1),n.lineString([l[i][u][a],l[i][u][a+1]],s,r)}throw new Error("geojson is invalid")},t.flattenEach=s,t.flattenReduce=function(e,r,t){var n=t;return s(e,(function(e,o,i){n=0===o&&0===i&&void 0===t?e:r(n,e,o,i)})),n},t.geomEach=a,t.geomReduce=function(e,r,t){var n=t;return a(e,(function(e,o,i,u,a){n=0===o&&void 0===t?e:r(n,e,o,i,u,a)})),n},t.lineEach=f,t.lineReduce=function(e,r,t){var n=t;return f(e,(function(e,o,i,u){n=0===o&&void 0===t?e:r(n,e,o,i,u)})),n},t.propEach=i,t.propReduce=function(e,r,t){var n=t;return i(e,(function(e,o){n=0===o&&void 0===t?e:r(n,e,o)})),n},t.segmentEach=l,t.segmentReduce=function(e,r,t){var n=t,o=!1;return l(e,(function(e,i,u,a,s){n=!1===o&&void 0===t?e:r(n,e,i,u,a,s),o=!0})),n}},{"@turf/helpers":3}]},{},[1])(1)}));
